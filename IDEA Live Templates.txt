// Settings -> Live Templates -> $Language



// ----------
// Javascript
// ----------

/* cl */

// TODO Remove console.log
console.log($END$);



// -----
// React
// -----

/* rrc (modified) */

import React from 'react';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';


const mapStateToProps = state => ({

});

const mapDispatchToProps = dispatch => ({

});

@connect(mapStateToProps, mapDispatchToProps)
export default class $componentName$ extends React["Component"] {
    static displayName = "$componentName$";

    render() {
        return (
            <div>
                $END$
            </div>
        );
    }
}

$componentName$.defaultProps = {

};
$componentName$.propTypes = {

};

/* ue (useEffect) */

useEffect(
    () => {$END$},
    []
);

/* um (useMemo) */

useMemo(
    () => {$END$},
    []
);

/* ur (useReducer) */

const [state, dispatch] = useReducer(
    (state, payload) => {
        const { /*TODO*/ } = payload;
        return { ...state, /*TODO*/ }
    },
    { /*TODO*/ }
);

// ~~~~~~~~~~~
// React-Redux
// ~~~~~~~~~~~

/* msp (mapStateToProps) */

const mapStateToProps = state => ({
    $END$
});

/* mdp (mapDispatchToProps) */

const mapDispatchToProps = dispatch => ({
    $END$
});

/* mdpa (mapDispatchToProps \w actions) */

const mapDispatchToProps = dispatch => bindActionCreators(
	{  }, dispatch
);

// ~~~
// CSS
// ~~~

/* cl (Custom HTML Label Rule): [ruleset list] */

[cl-~=] {
    $END$
}

/* clc (Custom HTML Label 'cl-ctrl'): [ruleset list] */

[cl-ctrl~=] {
    $END$
}